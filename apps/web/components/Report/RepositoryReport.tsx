import React, { useState } from 'react';
import { ReportableType } from '../../lib/graphql-types';
import { Button } from '../UI/Button/Button';
import { Modal } from '../UI/Modal';
import { Reason, Report } from './Report';

export interface RepositoryReportProps {
  repository: { fullName: string; id: string };
}

export const RepositoryReport = ({ repository }: RepositoryReportProps) => {
  const [showOtherModal, setShowOtherModal] = useState(false);

  const reasons: Reason[] = [
    {
      name: 'Ù…Ø­ØªÙˆØ§ÛŒ ØºÛŒØ± Ø§Ø®Ù„Ø§Ù‚ÛŒ',
      value: 'Ø§ÛŒÙ† Ù¾Ø±ÙˆÚ˜Ù‡ Ù…Ø­ØªÙˆØ§ØŒâ€Œ ØªØµÙˆÛŒØ± ÛŒØ§ Ù†Ø§Ù… ØºÛŒØ± Ø§Ø®Ù„Ø§Ù‚ÛŒ Ø¯Ø§Ø±Ø¯.',
    },
    {
      name: 'Ù¾Ø±ÙˆÚ˜Ù‡ ØºÛŒØ± Ø§ÛŒØ±Ø§Ù†ÛŒ',
      value: 'Ø§ÛŒÙ† Ù¾Ø±ÙˆÚ˜Ù‡ Ø§ÛŒØ±Ø§Ù†ÛŒ Ù†Ù…ÛŒ Ø¨Ø§Ø´Ø¯.',
    },
    {
      name: 'Ø¯ÛŒÚ¯Ø±',
      customValue: true,
    },
  ];

  return repository.fullName !== 'matnbaz/matnbaz' ? (
    <Report
      subject={ReportableType.Repository}
      subjectId={repository.id}
      modalTitle={`Ú¯Ø²Ø§Ø±Ø´ Ù¾Ø±ÙˆÚ˜Ù‡`}
      modalDescription={`Ø¯Ø±ØµÙˆØ±ØªÛŒ Ú©Ù‡ ${repository.fullName} ÛŒÚ©ÛŒ Ø§Ø² Ù…ÙˆØ§Ø±Ø¯ Ø°ÛŒÙ„ Ùˆ ÛŒØ§ ÛŒÚ©ÛŒ Ø§Ø² Ù‚ÙˆØ§Ù†ÛŒÙ† Ø³Ø§ÛŒØª Ø±Ø§ Ù†Ù‚Ø¶ Ú©Ø±Ø¯Ù‡ Ø§Ø³ØªØŒ Ø§Ø² Ø´Ù…Ø§ Ø¯Ø± Ø®ÙˆØ§Ø³Øª Ù…ÛŒ Ø´ÙˆØ¯ Ø¨Ù‡ Ù…Ø§ Ú¯Ø²Ø§Ø±Ø´ Ø¯Ù‡ÛŒØ¯.`}
      reasons={reasons}
    />
  ) : (
    // Why am I doing this
    <>
      <Button.Ghost
        onClick={() => {
          setShowOtherModal((previousState) => !previousState);
        }}
      >
        Ú¯Ø²Ø§Ø±Ø´
      </Button.Ghost>
      <Modal
        title="Ú¯Ø²Ø§Ø±Ø´ Ù¾Ø±ÙˆÚ˜Ù‡"
        show={showOtherModal}
        onClose={() => {
          setShowOtherModal(false);
        }}
      >
        <span>Ø¯Ø±ØµÙˆØ±ØªÛŒ Ú©Ù‡ {repository.fullName} ÛŒÚ©ÛŒ Ø§Ø² Ù…ÙˆØ§... ðŸ¤”</span>
      </Modal>
    </>
  );
};
